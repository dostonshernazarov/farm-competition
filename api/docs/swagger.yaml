definitions:
  models.Error:
    properties:
      message:
        type: string
    type: object
  models.StandartError:
    properties:
      error:
        $ref: '#/definitions/models.Error'
    type: object
  models.UserReq:
    properties:
      card:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  models.UserRes:
    properties:
      card:
        type: string
      created_at:
        type: string
      date_of_birth:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      gender:
        type: string
      id:
        type: string
      phone_number:
        type: string
      profile_img:
        type: string
      refresh_token:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
  description: API for Farmer
  title: Welcome To Farmish API
paths:
  /v1/users:
    post:
      consumes:
      - application/json
      description: Api for Create
      parameters:
      - description: createModel
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.StandartError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.StandartError'
      security:
      - BearerAuth: []
      summary: CREATE
      tags:
      - USER
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
